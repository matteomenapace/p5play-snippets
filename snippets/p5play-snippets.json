{".source.js":{"allSprites":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"allSprites","prefix":"allSprites","body":"allSprites","description":"A Group containing all the sprites in the sketch."},"createSprite(x,y,width,height)":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"createSprite()","prefix":"createSprite(x,y,width,height)","body":"createSprite(${1:x},${2:y},${3:width},${4:height})$5","description":"A Sprite is the main building block of p5.play: an element able to store images or animations with a set of properties such as position and visibility. A Sprite can have a collider that defines the active area to detect collisions ..."},"removeSprite(sprite)":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"removeSprite()","prefix":"removeSprite(sprite)","body":"removeSprite(${1:sprite})$2","description":"Removes a Sprite from the sketch.  The removed Sprite won't be drawn or updated anymore. Equivalent to Sprite.remove()"},"updateSprites(updating)":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"updateSprites()","prefix":"updateSprites(updating)","body":"updateSprites(${1:updating})$2","description":"Updates all the sprites in the sketch (position, animation...) it's called automatically at every draw(). It can be paused by passing a parameter true or false; Note: it does not render the sprites."},"getSprites()":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"getSprites()","prefix":"getSprites()","body":"getSprites()$1","description":"Returns all the sprites in the sketch as an array"},"drawSprite(sprite)":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"drawSprite()","prefix":"drawSprite(sprite)","body":"drawSprite(${1:sprite})$2","description":"Displays a Sprite. To be typically used in the main draw function."},"loadAnimation(sprite)":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"loadAnimation()","prefix":"loadAnimation(sprite)","body":"loadAnimation(${1:sprite})$2","description":"Loads an animation. To be typically used in the preload() function of the sketch."},"animation(anim,x,y)":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"animation()","prefix":"animation(anim,x,y)","body":"animation(${1:anim},${2:x},${3:y})$4","description":"Displays an animation."},"keyWentDown(key)":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"keyWentDown()","prefix":"keyWentDown(key)","body":"keyWentDown(${1:key})$2","description":"Detects if a key was pressed during the last cycle. It can be used to trigger events once, when a key is pressed or released. Example: Super Mario jumping."},"keyWentUp(key)":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"keyWentUp()","prefix":"keyWentUp(key)","body":"keyWentUp(${1:key})$2","description":"Detects if a key was released during the last cycle. It can be used to trigger events once, when a key is pressed or released. Example: Spaceship shooting."},"keyDown(key)":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"keyDown()","prefix":"keyDown(key)","body":"keyDown(${1:key})$2","description":"Detects if a key is currently pressed Like p5 keyIsDown but accepts strings and codes"},"mouseDown(button)":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"mouseDown()","prefix":"mouseDown(button)","body":"mouseDown(${1:button})$2","description":"Detects if a mouse button is currently down Combines mouseIsPressed and mouseButton of p5"},"mouseUp(button)":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"mouseUp()","prefix":"mouseUp(button)","body":"mouseUp(${1:button})$2","description":"Detects if a mouse button is currently up Combines mouseIsPressed and mouseButton of p5"},"mouseWentUp(button)":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"mouseWentUp()","prefix":"mouseWentUp(button)","body":"mouseWentUp(${1:button})$2","description":"Detects if a mouse button was released during the last cycle. It can be used to trigger events once, to be checked in the draw cycle"},"mouseWentDown(button)":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"mouseWentDown()","prefix":"mouseWentDown(button)","body":"mouseWentDown(${1:button})$2","description":"Detects if a mouse button was pressed during the last cycle. It can be used to trigger events once, to be checked in the draw cycle"},"KEY":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"KEY","prefix":"KEY","body":"KEY","description":"An object storing all useful keys for easy access Key.tab = 9"},"useQuadTree(use)":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"useQuadTree()","prefix":"useQuadTree(use)","body":"useQuadTree(${1:use})$2","description":"Turns the quadTree on or off. A quadtree is a data structure used to optimize collision detection. It can improve performance when there is a large number of Sprites to be checked continuously for overlapping.  p5.play will create ..."},"position":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"position","prefix":"position","body":"position","description":"Camera position. Defines the global offset of the sketch."},"previousPosition":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"previousPosition","prefix":"previousPosition","body":"previousPosition","description":"The sprite's position at the beginning of the last update as a vector (x,y)."},"velocity":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"velocity","prefix":"velocity","body":"velocity","description":"The sprite's velocity as a vector (x,y) Velocity is speed broken down to its vertical and horizontal components."},"maxSpeed":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"maxSpeed","prefix":"maxSpeed","body":"maxSpeed","description":"Set a limit to the sprite's scalar speed regardless of the direction. The value can only be positive. If set to -1, there's no limit."},"friction":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"friction","prefix":"friction","body":"friction","description":"Friction factor, reduces the sprite's velocity. The friction should be close to 1 (eg. 0.99) 1: no friction"},"collider":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"collider","prefix":"collider","body":"collider","description":"The sprite's current collider. It can either be an Axis Aligned Bounding Box (a non-rotated rectangle) or a circular collider. If the sprite is checked for collision, bounce, overlapping or mouse events the collider is automatically ..."},"touching":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"touching","prefix":"touching","body":"touching","description":"Object containing information about the most recent collision/overlapping To be typically used in combination with Sprite.overlap or Sprite.collide functions. The properties are touching.left, touching.right, touching.top,  touching.bottom ..."},"mass":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"mass","prefix":"mass","body":"mass","description":"The mass determines the velocity transfer when sprites bounce against each other. See Sprite.bounce The higher the mass the least the sprite will be affected by collisions."},"immovable":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"immovable","prefix":"immovable","body":"immovable","description":"If set to true the sprite won't bounce or be displaced by collisions Simulates an infinite mass or an anchored object."},"restitution":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"restitution","prefix":"restitution","body":"restitution","description":"Coefficient of restitution. The velocity lost after bouncing. 1: perfectly elastic, no energy is lost 0: perfectly inelastic, no bouncing <1: inelastic, this is the most common in nature >1: hyper elastic, energy is increased like ..."},"rotation":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"rotation","prefix":"rotation","body":"rotation","description":"Rotation in degrees of the visual element (image or animation) Note: this is not the movement's direction, see getDirection."},"rotationSpeed":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"rotationSpeed","prefix":"rotationSpeed","body":"rotationSpeed","description":"Rotation change in degrees per frame of thevisual element (image or animation) Note: this is not the movement's direction, see getDirection."},"rotateToDirection":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"rotateToDirection","prefix":"rotateToDirection","body":"rotateToDirection","description":"Automatically set the rotation of the visual element  (image or animation) to the sprite's movement direction."},"depth":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"depth","prefix":"depth","body":"depth","description":"Determines the rendering order within a group: a sprite with  lower depth will appear below the ones with higher depth.  Note: drawing a group before another with drawSprites will make its members appear below the second one, like ..."},"scale":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"scale","prefix":"scale","body":"scale","description":"Determines the sprite's scale. Example: 2 will be twice the native size of the visuals, 0.5 will be half. Scaling up may make images blurry."},"visible":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"visible","prefix":"visible","body":"visible","description":"Animation visibility."},"mouseActive":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"mouseActive","prefix":"mouseActive","body":"mouseActive","description":"If set to true sprite will track its mouse state. the properties mouseIsPressed and mouseIsOver will be updated. Note: automatically set to true if the functions onMouseReleased or onMousePressed are set."},"mouseIsOver":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"mouseIsOver","prefix":"mouseIsOver","body":"mouseIsOver","description":"True if mouse is on the sprite's collider. Read only."},"mouseIsPressed":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"mouseIsPressed","prefix":"mouseIsPressed","body":"mouseIsPressed","description":"True if mouse is pressed on the sprite's collider. Read only."},"width":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"width","prefix":"width","body":"width","description":"Width of the sprite's current image. If no images or animations are set it's the width of the  placeholder rectangle."},"height":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"height","prefix":"height","body":"height","description":"Height of the sprite's current image. If no images or animations are set it's the height of the  placeholder rectangle."},"originalWidth":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"originalWidth","prefix":"originalWidth","body":"originalWidth","description":"Unscaled width of the sprite If no images or animations are set it's the width of the  placeholder rectangle."},"originalHeight":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"originalHeight","prefix":"originalHeight","body":"originalHeight","description":"Unscaled height of the sprite If no images or animations are set it's the height of the  placeholder rectangle."},"removed":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"removed","prefix":"removed","body":"removed","description":"Cycles before self removal. Set it to initiate a countdown, every draw cycle the property is reduced by 1 unit. At 0 it will call a sprite.remove() Disabled if set to -1."},"debug":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"debug","prefix":"debug","body":"debug","description":"If set to true, draws an outline of the collider, the depth, and center."},"shapeColor":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"shapeColor","prefix":"shapeColor","body":"shapeColor","description":"If no image or animations are set this is color of the  placeholder rectangle"},"groups":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"groups","prefix":"groups","body":"groups","description":"Groups the sprite belongs to, including allSprites"},"animation":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"animation","prefix":"animation","body":"animation","description":"Reference to the current animation."},"update()":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"update()","prefix":"update()","body":"update()$1","description":"Updates the sprite. Called automatically at the beginning of the draw cycle."},"setCollider(type,offsetX,offsetY,width,height)":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"setCollider()","prefix":"setCollider(type,offsetX,offsetY,width,height)","body":"setCollider(${1:type},${2:offsetX},${3:offsetY},${4:width},${5:height})$6","description":"Sets a collider for the sprite.  In p5.play a Collider is an invisible circle or rectangle that can have any size or position relative to the sprite and which will be used to detect collisions and overlapping with other sprites, or ..."},"mirrorX(dir)":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"mirrorX()","prefix":"mirrorX(dir)","body":"mirrorX(${1:dir})$2","description":"Sets the sprite's horizontal mirroring. If 1 the images displayed normally If -1 the images are flipped horizontally If no argument returns the current x mirroring"},"mirrorY(dir)":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"mirrorY()","prefix":"mirrorY(dir)","body":"mirrorY(${1:dir})$2","description":"Sets the sprite's vertical mirroring. If 1 the images displayed normally If -1 the images are flipped vertically If no argument returns the current y mirroring"},"draw()":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"draw()","prefix":"draw()","body":"draw()$1","description":"Draws all the sprites in the group."},"remove()":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"remove()","prefix":"remove()","body":"remove()$1","description":"Removes the Sprite from the sketch.  The removed Sprite won't be drawn or updated anymore."},"setVelocity(x,x)":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"setVelocity()","prefix":"setVelocity(x,x)","body":"setVelocity(${1:x},${2:x})$3","description":"Sets the velocity vector."},"setVelocity()":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"setVelocity()","prefix":"setVelocity()","body":"setVelocity()$1","description":"Calculates the scalar speed."},"getDirection()":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"getDirection()","prefix":"getDirection()","body":"getDirection()$1","description":"Calculates the movement's direction in degrees."},"addToGroup(group)":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"addToGroup()","prefix":"addToGroup(group)","body":"addToGroup(${1:group})$2","description":"Adds the sprite to an existing group"},"limitSpeed(max)":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"limitSpeed()","prefix":"limitSpeed(max)","body":"limitSpeed(${1:max})$2","description":"Limits the scalar speed."},"setSpeed(speed,angle)":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"setSpeed()","prefix":"setSpeed(speed,angle)","body":"setSpeed(${1:speed},${2:angle})$3","description":"Set the speed and direction of the sprite. The action overwrites the current velocity."},"addSpeed(speed,angle)":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"addSpeed()","prefix":"addSpeed(speed,angle)","body":"addSpeed(${1:speed},${2:angle})$3","description":"Pushes the sprite in a direction defined by an angle. The force is added to the current velocity."},"attractionPoint(magnitude,pointX,pointY)":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"attractionPoint()","prefix":"attractionPoint(magnitude,pointX,pointY)","body":"attractionPoint(${1:magnitude},${2:pointX},${3:pointY})$4","description":"Pushes the sprite toward a point. The force is added to the current velocity."},"addImage(label,[img])":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"addImage()","prefix":"addImage(label,[img])","body":"addImage(${1:label},${2:[img]})$3","description":"Adds an image to the sprite. An image will be considered a one-frame animation. The image should be preloaded in the preload() function using p5 loadImage. Animations require a identifying label (string) to change them. The image is ..."},"addAnimation(label,animation)":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"addAnimation()","prefix":"addAnimation(label,animation)","body":"addAnimation(${1:label},${2:animation})$3","description":"Adds an animation to the sprite. The animation should be preloaded in the preload() function  using loadAnimation. Animations require a identifying label (string) to change them. Animations are stored in the sprite but not necessarily ..."},"changeImage(label)":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"changeImage()","prefix":"changeImage(label)","body":"changeImage(${1:label})$2","description":"Changes the displayed image/animation. Equivalent to changeAnimation"},"getAnimationLabel()":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"getAnimationLabel()","prefix":"getAnimationLabel()","body":"getAnimationLabel()$1","description":"Returns the label of the current animation"},"changeAnimation(label)":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"changeAnimation()","prefix":"changeAnimation(label)","body":"changeAnimation(${1:label})$2","description":"Changes the displayed animation. See Animation for more control over the sequence."},"overlapPixel(pointX,pointY)":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"overlapPixel()","prefix":"overlapPixel(pointX,pointY)","body":"overlapPixel(${1:pointX},${2:pointY})$3","description":"Checks if the given point corresponds to a transparent pixel in the sprite's current image. It can be used to check a point collision  against only the visible part of the sprite."},"overlapPoint(pointX,pointY)":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"overlapPoint()","prefix":"overlapPoint(pointX,pointY)","body":"overlapPoint(${1:pointX},${2:pointY})$3","description":"Checks if the given point is inside the sprite's collider."},"overlap(target,[callback])":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"overlap()","prefix":"overlap(target,[callback])","body":"overlap(${1:target},${2:[callback]})$3","description":"Checks if the the group is overlapping another group. If the overlap is positive the sprites in the group will be displaced  by the colliding one to the closest non-overlapping positions.   The check is performed using the colliders. ..."},"collide(target,[callback])":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"collide()","prefix":"collide(target,[callback])","body":"collide(${1:target},${2:[callback]})$3","description":"Checks if the the sprite is overlapping another sprite or a group. If the overlap is positive the current sprite will be displace by the colliding one in the closest non-overlapping position.   The check is performed using the colliders. ..."},"displace(target,[callback])":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"displace()","prefix":"displace(target,[callback])","body":"displace(${1:target},${2:[callback]})$3","description":"Checks if the the group is overlapping another group. If the overlap is positive the sprites in the group will displace  the colliding ones to the closest non-overlapping positions.   The check is performed using the colliders. If ..."},"bounce(target,[callback])":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"bounce()","prefix":"bounce(target,[callback])","body":"bounce(${1:target},${2:[callback]})$3","description":"Checks if the the group is overlapping another group. If the overlap is positive the sprites will bounce affecting each other's trajectories depending on their .velocity, .mass and .restitution  The check is performed using the colliders. ..."},"camera":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"camera","prefix":"camera","body":"camera","description":"The sketch camera automatically created at the beginning of a sketch. A camera facilitates scrolling and zooming for scenes extending beyond the canvas. A camera has a position, a zoom factor, and the mouse  coordinates relative to ..."},"zoom":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"zoom","prefix":"zoom","body":"zoom","description":"Camera zoom. Defines the global scale of the sketch. A scale of 1 will be the normal size. Setting it to 2 will make everything twice the size. .5 will make everything half size."},"mouseX":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"mouseX","prefix":"mouseX","body":"mouseX","description":"MouseX translated to the camera view.  Offsetting and scaling the canvas will not change the sprites' position  nor the mouseX and mouseY variables. Use this property to read the mouse position if the camera moved or zoomed."},"mouseY":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"mouseY","prefix":"mouseY","body":"mouseY","description":"MouseY translated to the camera view.  Offsetting and scaling the canvas will not change the sprites' position  nor the mouseX and mouseY variables. Use this property to read the mouse position if the camera moved or zoomed."},"active":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"active","prefix":"active","body":"active","description":"True if the camera is active. Read only property. Use the methods Camera.on() and Camera.off() to enable or disable the camera."},"on()":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"on()","prefix":"on()","body":"on()$1","description":"Activates the camera. The canvas will be drawn according to the camera position and scale until Camera.off() is called"},"off()":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"off()","prefix":"off()","body":"off()$1","description":"Deactivates the camera. The canvas will be drawn normally, ignoring the camera's position and scale until Camera.on() is called"},"get(i)":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"get()","prefix":"get(i)","body":"get(${1:i})$2","description":"Gets the member at index i."},"contains(sprite)":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"contains()","prefix":"contains(sprite)","body":"contains(${1:sprite})$2","description":"Checks if the group contains a sprite."},"add(sprite)":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"add()","prefix":"add(sprite)","body":"add(${1:sprite})$2","description":"Adds a sprite to the group."},"clear()":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"clear()","prefix":"clear()","body":"clear()$1","description":"Removes all references to the group. Does not remove the actual sprites."},"remove(sprite)":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"remove()","prefix":"remove(sprite)","body":"remove(${1:sprite})$2","description":"Removes a sprite from the group. Does not remove the actual sprite, only the affiliation (reference)."},"maxDepth()":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"maxDepth()","prefix":"maxDepth()","body":"maxDepth()$1","description":"Returns the highest depth in a group"},"minDepth()":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"minDepth()","prefix":"minDepth()","body":"minDepth()$1","description":"Returns the lowest depth in a group"},"images":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"images","prefix":"images","body":"images","description":"Array of frames (p5.Image)"},"frameDelay":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"frameDelay","prefix":"frameDelay","body":"frameDelay","description":"Delay between frames in number of draw cycles. If set to 4 the framerate of the anymation would be the sketch framerate divided by 4 (60fps = 15fps)"},"playing":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"playing","prefix":"playing","body":"playing","description":"True if the animation is currently playing."},"looping":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"looping","prefix":"looping","body":"looping","description":"If set to false the animation will stop after reaching the last frame"},"frameChanged":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"frameChanged","prefix":"frameChanged","body":"frameChanged","description":"True if frame changed during the last draw cycle"},"clone()":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"clone()","prefix":"clone()","body":"clone()$1","description":"Objects are passed by reference so to have different sprites using the same animation you need to clone it."},"draw(x,y)":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"draw()","prefix":"draw(x,y)","body":"draw(${1:x},${2:y})$3","description":"Draws the animation at coordinate x and y. Updates the frames automatically."},"play()":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"play()","prefix":"play()","body":"play()$1","description":"Plays the animation."},"stop()":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"stop()","prefix":"stop()","body":"stop()$1","description":"Stops the animation."},"rewind()":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"rewind()","prefix":"rewind()","body":"rewind()$1","description":"Rewinds the animation to the first frame."},"changeFrame(frame)":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"changeFrame()","prefix":"changeFrame(frame)","body":"changeFrame(${1:frame})$2","description":"Changes the current frame."},"changeFrame()":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"changeFrame()","prefix":"changeFrame()","body":"changeFrame()$1","description":"Goes to the next frame and stops."},"goToFrame(targetFrame)":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"goToFrame()","prefix":"goToFrame(targetFrame)","body":"goToFrame(${1:targetFrame})$2","description":"Plays the animation forward or backward toward a target frame."},"getFrame()":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"getFrame()","prefix":"getFrame()","body":"getFrame()$1","description":"Returns the current frame number."},"getLastFrame()":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"getLastFrame()","prefix":"getLastFrame()","body":"getLastFrame()$1","description":"Returns the last frame number."},"getFrameImage()":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"getFrameImage()","prefix":"getFrameImage()","body":"getFrameImage()$1","description":"Returns the current frame image as p5.Image."},"getImageAt(frame)":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"getImageAt()","prefix":"getImageAt(frame)","body":"getImageAt(${1:frame})$2","description":"Returns the frame image at the specified frame number."},"getWidth()":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"getWidth()","prefix":"getWidth()","body":"getWidth()$1","description":"Returns the current frame width in pixels."},"getHeight()":{"rightLabelHTML":"<span style=\"color:#ed225d;display:inline-block;font-weight:400;font-size:1.25em\">p5play</span>","leftLabel":"getHeight()","prefix":"getHeight()","body":"getHeight()$1","description":"Returns the current frame height in pixels."}}}